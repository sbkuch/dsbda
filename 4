import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("C:/Users/aasth/OneDrive/Desktop/DSBDA/Boston.csv")
print(df.head())

print("Shape of dataset:", df.shape)

print("\nColumn names:\n", df.columns)

print("\nMissing values:\n", df.isnull().sum())

print("\nData Types:\n", df.dtypes)

print("\nSummary Statistics:\n", df.describe())

sns.pairplot(df[['rm', 'lstat', 'ptratio', 'medv']])
plt.show()

# Correlation heatmap
plt.figure(figsize=(10,8))
sns.heatmap(df.corr(), annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

X = df.drop('medv', axis=1)   # Features
y = df['medv']                # Target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

print("Intercept:", model.intercept_)
coeff_df = pd.DataFrame(model.coef_, X.columns, columns=["Coefficient"])
print(coeff_df)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("Root Mean Squared Error:", rmse)
print("RÂ² Score:", r2)

plt.scatter(y_test, y_pred, color='blue')
plt.xlabel("Actual medv")
plt.ylabel("Predicted medv")
plt.title("Actual vs Predicted House Prices")
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red')  # identity line
plt.show()
